name: unit-tests

on:
  push:
    branches:
      - main
      - feature/dep_cache_pipenv

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [3.8, 3.9, "3.10"]
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: set up rust
        if: matrix.os != 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y && rustup show
        if: matrix.os == 'ubuntu-latest'

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        id: python-setup
        with:
          python-version: ${{ matrix.python }}
          cache-dependency-path: '**/setup.py'
          cache: 'pipenv'

      - name: Install Python dependencies
        if: ${{ steps.python-setup.outputs.cache-hit != 'true' }}
        run: |
          echo ${{ steps.python-setup.outputs.cache-hit}}
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
          pipenv shell
          pip install scikit-learn sqlalchemy
          pip install pytest-xdist[psutil]

      - name: Build River
        run: |
          pipenv shell
          pip install -e ".[dev]"

      - name: Cache River datasets
        uses: actions/cache@v2
        with:
          path: ~/river_data
          key: ${{ runner.os }}

      - name: Cache scikit-learn datasets
        uses: actions/cache@v2
        with:
          path: ~/scikit_learn_data
          key: ${{ runner.os }}

      - name: Download datasets
        run: |
          pipenv run python -c "from river import datasets; datasets.CreditCard().download(); datasets.Elec2().download()"

      - name: pytest
        run: |
          pipenv run pytest -m "not datasets" --durations=10 -n logical # Run pytest on all logical CPU cores