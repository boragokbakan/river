name: unit-tests

on:
  workflow_call:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [3.8, 3.9, "3.10"]
        os: [ubuntu-latest, macos-latest]

    # Instead of using two matrices in the calling Workflow, we can use conditionals here
    if: (matrix.os == 'ubuntu-latest' && matrix.python == '3.9') || github.event_name == 'push'

    steps:
      - name: Retrieve the Python environment
        uses: actions/cache/restore@v3
        id: retrieve-venv
        with:
          path: ~/.venv
          key: ${{ github.run_id }}-venv-${{ runner.os }}-${{ matrix.python }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python }}-venv

      - name: Retrieve River
        uses: actions/cache/restore@v3
        id: retrieve-river
        with:
          path: ${{ github.workspace }}
          key: river-build-${{ github.run_id }}-${{ runner.os }}-${{ matrix.python }}

      - name: Cache River datasets
        uses: actions/cache@v3
        with:
          path: ~/river_data
          key: ${{ runner.os }}

      - name: Cache scikit-learn datasets
        uses: actions/cache@v3
        with:
          path: ~/scikit_learn_data
          key: ${{ runner.os }}

      - name: Download datasets
        run: |
          source ~/.venv/bin/activate
          python -c "from river import datasets; datasets.CreditCard().download(); datasets.Elec2().download()"

      - name: pytest [Branch]
        if: github.event_name == 'pull_request'
        run: |
          source ~/.venv/bin/activate
          pytest --durations=10 -n logical # Run pytest on all logical CPU cores

      - name: pytest [Main]
        if: github.event_name == 'push'
        run: |
          source ~/.venv/bin/activate
          pytest -m "not datasets" --durations=10 -n logical # Run pytest on all logical CPU cores