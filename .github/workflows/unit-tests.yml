name: unit-tests

on:
  push:
    branches:
      - main
      - feature/faster_unittests

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10"] #[3.8, 3.9, "3.10"]
        os: [ubuntu-latest] #, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: set up rust
        if: matrix.os != 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y && rustup show
        if: matrix.os == 'ubuntu-latest'

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Cache Python venv
        uses: actions/cache@v2
        with:
          path: ~/.venv
          key: ${{ runner.os }}-${{ matrix.python }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python }}-pip-

      - name: Create Python venv
        run: |
          python -m pip install --upgrade pip
          python -m venv ~/.venv
          source ~/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
          pip install scikit-learn sqlalchemy

      - name: Pip list
        run: |
          source ~/.venv/bin/activate
          python -m pip list

      - name: Install River in editable mode
        run: |
          source ~/.venv/bin/activate
          pip install -e ".[dev]"

      - name: Cache datasets
        uses: actions/cache@v2
        with:
          path: ~/river_data
          key: ${{ runner.os }}

      - name: Download datasets
        run: |
          source ~/.venv/bin/activate
          python -c "from river import datasets; datasets.CreditCard().download(); datasets.Elec2().download()"

      - name: pytest
        run: | 
          source ~/.venv/bin/activate
        # pytest -m "not datasets"
