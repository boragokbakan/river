name: build-river

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

      python:
        required: true
        type: string

jobs:
  build_river:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v2

      - name: set up rust
        if: ${{ inputs.os-path }} != 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y && rustup show
        if: ${{ inputs.os-path }} == 'ubuntu-latest'

      - name: Set up Python ${{ inputs.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python }}

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ~/.venv
          key: ${{ inputs.os }}-${{ matrix.python }}-venv-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ inputs.os }}-${{ matrix.python }}-venv-

      - name: Install Python dependencies
        if: ${{ steps.cache-venv.outputs.cache-hit != 'true' }}
        run: |
          python -m pip install --upgrade pip
          python -m venv ~/.venv
          source ~/.venv/bin/activate
          pip install wheel
          pip install scikit-learn sqlalchemy
          pip install pytest-xdist[psutil]
  
      - name: Build River
        run: |
          source ~/.venv/bin/activate
          pip install -e ".[dev]"